06.05.2021
=========

Download and install jenkins
----------------------------

step 1
------

. Go to official document page

https://www.jenkins.io


. click install jenkins


vim install-jenkins.sh
#!/bin/bash
wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > \
    /etc/apt/sources.list.d/jenkins.list'
sudo apt-get update -y 
sudo apt-get install jenkins -y



sh install-jenkins.sh


Installation of Java
--------------------

vim install-java.sh

#!/bin/bash

sudo apt update

sudo apt search openjdk

sudo apt install openjdk-11-jdk

java -version


sh install-java.sh


Start Jenkins

Register the Jenkins service with the command:

$ sudo systemctl daemon-reload




You can start the Jenkins service with the command:

$ sudo systemctl start jenkins

You can check the status of the Jenkins service using the command:

$ sudo systemctl status jenkins



http://localhost:8080

Admin password

 cat /var/lib/jenkins/secrets/initialAdminPassword
a8e627c15d7043229de222a75d406f56


install suggested plugins


--------------------------------------------------------------------------------------------------------------------

10.05.2021
----------

change jenkins home directory
-----------------------------

step1:

$ sudo -i

# systemctl stop jenkins

# systemctl status jenkins 

# mkdir /home/rits-3/jenkins_newhome

# sudo chown jenkins:jenkins /home/rits-3/jenkins_newhome	

# sudo cp -prv /var/lib/jenkins /home/rits-3/jenkins_newhome	

# change jenkins user home directory
------------------------------------

# sudo usermod -d /home/rits-3/jenkins_newhome jenkins	

sudo vi /etc/default/jenkins	

change home directory location

# jenkins home location
JENKINS_HOME=/home/rits-3/jenkins_newhome	


# systemctl start jenkins

cat /home/rits-3/jenkins_newhome/secrets/initialAdminPassword 
9efb5173e6864c8788c5da3c1eb96354


-------------------------------------------------------------------------------------------------------------------------------------------
16.05.2021
==========

http:localhost:8080

create user + manage user + create roles + manage roles
-------------------------------------------------------

step1 : Manage Jenkins -> create user 


step2: Manage jenkins -> Manage plugin ->  Role-based Authorization Strategy plugin


step3 :  Manage jenkins -> configure Global security -> Authorization -> Role-Based Strategy -> apply -> save


step4: logout and login with new user

Access Denied

user1 is missing the Overall/Read permission


 create role and assig to user
------------------------------

step 5: Manage jenkins -> Manage and Assign Roles -> manage Roles

1. Global role

2. item role

3. Node role



Global role -> role name -> add role > select permission -> apply -> save


item role -> role name  pattern ex: Dev.*-> add role > select permission -> apply -> save

item role -> role name  pattern ex: Dev.*-> add role > select permission -> apply -> save


step 6: Manage Jenkins -> Manage and Assign Roles -> Assign role -> add user -> assign role -> apply -> save


step 7 : create new item -> Devproject1 -> select project -> ok -> apply -> save


logout and login with new user


create new item -> Testproject1 -> select project -> ok -> apply -> save


logout and login with new user


------------------------------------------------------------------------------------------------------------------

18.05.2021
==========

Basic configuration in jenkins
------------------------------

manage jenkins -> configure system -> view home directory

system message [Hi this is saiva jenkins server]

 of executorsv -> number of parallel job jenkins should run



Manage jenkins -> add nodes > make jenkins as master > add nodes execution on different nodes


restric project naming

pattern Test.*

Jenkins location




--------------------------------------------------------------------------------------------------------------

24.05.2021
----------

jobs in jenkins
---------------


step1: jenkins -> newitem ->project name -> freestyle project -> ok


step2: select project -> configure -> general -> sourcecode management -> build trigger -> enviroment -> build -> postbuild actions


general -> describtion -> give using html tag like <h1>saiva</h1> ->priview > apply -> ok


build trigger -> build periodicaly -> H/15 * * * * > apply -> save -> click project -> clickbuild -> check dashboard


build -> execute shell > date -> apply->save 


click project -> show console output 


build trigger remotely
----------------------

clickproject->configure -> build trigger -> build trigger remotely -> copy url -> changeaccordingly

---------------------------------------------------------------------------------------------------------------------------

25.05.2021
----------

jenkins integrate with git
--------------------------


# mkdir jen

# cd jen

# vim loop.py

fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)

python loop.py

apple
banana
cherry


create repo in github
---------------------


create new job in jenkins


newitem -> name of project -> ok -> scm -> select git -> add repo -> build -> execute shell > python loop.py -> apply -> save

select project -> poll scm -> configure schedule -> build -> success blue color -> view console o/p

-------------------------------------------------------------------------------------------------------

29.05.2021
==========

Automated deployment in jenkins
-------------------------------


create job
----------

New item -> job name -> select free style project -> ok 

select job > configure -> scm -> select git -> past github url -> build section -> select shell -> sudo docker build -t jenkins/cicd, sudo docker-compose up -d

before add jenkins user with nopassword 

--------------------------------------------------------------------------------------------------

30.05.2021
==========

Jenkins Email Notifications
---------------------------

install postfix and mailutils 



$ sudo apt install postfix


$ sudo cp /etc/postfix/main.cf /etc/postfix/main.cf.backup



$ sudo vim /etc/postfix/main.cf


myhostname = mail.domain.com

mydomain = domain.com

myorigin = $mydomain
    
#Parameters for the interface used for listening ports:

inet_interfaces = localhost

inet_protocols = ipv4

mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain

mynetworks = 127.0.0.0/8

relay_domains = $mydestination

#Backing directory for saving mailboxes

home_mailbox = Maildir/


$ sudo systemctl enable postfix

$ sudo systemctl start postfix

Remember that any further modification to the configuration files, would entail the need to reload the service:

$ sudo systemctl reload postfix

In case of problems, remember that the status and operating parameters on Postfix may be examined in detail by using the log file in the directory:

$ sudo tail /var/log/mail.log

sudo telnet localhosr 25







Manage Jenkins -> configure system -> Email-Notification -> smtp server = smtp.gmail.com -> Default user e-mail suffix = @gmail.com -> 


Use SMTP Authentication

User Name

Password

Concealed

Use SSL


SMTP Port

Reply-To Address


Apply

save


create job
----------


new item -> projectname -> after build -> Email notication -> email id -> apply save 

select job -> build -> if job fail -> job notified via email

---------------------------------------------------------------------------------------------------------------------------.

31.05.2021
==========

Delivery pipeline in jenkins
----------------------------

step 1
------

install delivey pipeline


step 2
------

create 3 jobs

SampleBuildJob

SampleDeployJob

SampleTestJob


step 3
------

chain together
--------------

seletc deploy job -> configure -> build trigger section -> build after another project = SampleBuildJob-> apply -> ok

seletc test job -> configure -> build trigger section -> build after another project = SampleDeployJob-> applt -> ok


run and check


step 4
-------

dash board -> click plus symbol -> add pipeline name -> component add -> add job and jobe name -> apply -> save

run and validate

-------------------------------------------------------------------------------------------------------------------------------------------

build pipeline in jenkins
-------------------------

jenkins dashboard -> click plus symbol -> select build pipe line view -> type name -> inital job -> number of job view -> console o/p view -> ok


--------------------------------------------------------------------------------------------------------------------------------------------

Jenkins-cli
-----------

http://192.168.43.49:8080/cli


download jar file move to jenkins folder


Mange jenkins -> Global security -> authorization ->  Anyone can do anything -> apply -> ok


java -jar jenkins-cli.jar -s http://192.168.43.49:8080/ -webSocket restart


------------------------------------------------------------------------------------------------------------------------------
24.07.2021
----------

jenkins plugin
--------------

Manage jenkins -> plugins -> updates -> available -> installed -> advanced


available -> monitoring plugin -> install -> without restart -> monitor jenkins master


--------------------------------------------------------------------------------------------

jenkins security
---------------

Manage jenkins -> global security-> enable >------------------------------------

27.07.2021
==========

Jenkins pipeline declerative command
-------------------------------------

Manage jenkins - Manage plugin -> install pipeline plugin


New item -> job name -> select pipeline->


Jenkinsfile (Declarative Pipeline)

pipeline {
    agent any 
    stages {
        stage('Stage 1') {
            steps {
                echo 'Hello world!' 
            }
        }
    }
}



apply and save


build job

---------------------------------------------------------------------------------------

three stage jenkins pipeline
----------------------------

Jenkinsfile

pipeline {
    
    agent any 
    
    stages {
        
        stage ('build') {
            
            steps {
                
                echo "This is build"
            }
        }
        
        stage ('test') {
            
            steps {
                
                echo "This is build test"
            }
        }
        
        stage ('Deploy') {
            
            steps {
                
                echo "This is deploy"
            }
        }
    }
    
}



Apply and save


build job


-----------------------------------------------------------------------------------------

ansible integrate with jenkins
==============================


Manage jenkins -> Manage plugins -> Available -> install Ansible plugin 


New job -> demo-ansible -> select pipeline ->


pipeline {
    
    agent any
    
    stages {
        
        stage  ("SCM Checkout") {
            
            steps  { 
                
               git 'https://github.com/saivachandran/ansible-jenkins.git' 
                
            }
            
            
            
            
        }
         stage  ("Deploy Ansible playbook") {
             
            steps  { 
                
              ansiblePlaybook credentialsId: 'sai', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'apache-install.yml'
            } 
             
             
             
         }
             
            
        
            
            
            
            
            
            
        }
        
    }
    



apply and save


Build pipeline


----------------------------------------------------------------------------------------------------

	












 










	



















